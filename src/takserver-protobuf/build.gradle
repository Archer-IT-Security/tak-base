apply plugin: 'java-library'
apply plugin: 'com.google.protobuf'
apply plugin: 'maven-publish'

buildscript {
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:'+ gradle_protobuf_version
  }
}

dependencies {
  implementation group: 'io.perfmark', name: 'perfmark-api', version: perfmark_api_version

  implementation group: 'javax.annotation', name: 'javax.annotation-api', version: annotation_api_version

  // gRPC
  implementation (group: 'io.grpc', name: 'grpc-netty', version: grpc_version) {
    exclude group: 'io.perfmark', module: 'perfmark-api'
}
  implementation (group: 'io.grpc', name: 'grpc-protobuf', version: grpc_version) {
    exclude group: 'io.perfmark', module: 'perfmark-api'
}
  implementation (group: 'io.grpc', name: 'grpc-stub', version: grpc_version) {
    exclude group: 'io.perfmark', module: 'perfmark-api'
}

  // Google's OpenSSL variant
  // Important Note: be cautious with this dependency version, in combination with the gprc-* above.
  api "io.netty:netty-tcnative-boringssl-static:$netty_tcnative_version:linux-x86_64"
  api "io.netty:netty-tcnative-boringssl-static:$netty_tcnative_version:linux-aarch_64"
  api "io.netty:netty-tcnative-boringssl-static:$netty_tcnative_version:osx-x86_64"
  api "io.netty:netty-tcnative-boringssl-static:$netty_tcnative_version:osx-aarch_64"
  api "io.netty:netty-tcnative-boringssl-static:$netty_tcnative_version:windows-x86_64"

  //implementation 'javax.activation:activation:' + javax_activation_version
  
  // guava
  api group: 'com.google.guava', name: 'guava', version: guava_version
}

// protobuf code generation step
protobuf {
  protoc {
    artifact = 'com.google.protobuf:protoc:3.0.0'
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.0.2'
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        // To generate deprecated interfaces and static bindService method,
        // turn the enable_deprecated option to true below:
        option 'enable_deprecated=false'
      }
    }
  }
}

apply plugin: 'idea'
apply plugin: 'eclipse'

// This should be fixed in  Gradle 7.2 according to
// https://github.com/gradle/gradle/issues/4505, but that's a larger task than
// A five minute work-around.
if ("$System.env.TAK_GRADLE_CI_MODE" != "true") {
  println("NOT USING CI")
  idea {
    module {
      // Not using generatedSourceDirs because of
      // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
      sourceDirs += file("${projectDir}/build/generated/source/proto/main/java")
      sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc")
    }
  }
}

sourceSets {
  main {
    java {
      srcDir 'build/generated/source/proto/main/grpc'
      srcDir 'build/generated/source/proto/main/java'
    }
  }
}

clean {
  doFirst {
    delete 'bin'
  }
}

//Generates protobuf code, applies the patch
task applyGrpcPatch {
    dependsOn 'generateProto'
    description 'Patches the generated protobuf to make it compatible with both versions 2 and 3'
    doLast {
        def file = file('build/generated/source/proto/main/java/com/atakmap/Tak/GeoEvent.java')
        if (!file.exists()) {
            throw new GradleException("Generated protobuf file not found: ${file.absolutePath}")
        }

        def content = file.text
        
        // Remove the conditional checks for double fields
        content = content.replaceAll(/if \(lat_ != 0D\) \{\n\s+output\.writeDouble\(4, lat_\);\n\s+\}/, 'output.writeDouble(4, lat_);')
        content = content.replaceAll(/if \(lon_ != 0D\) \{\n\s+output\.writeDouble\(5, lon_\);\n\s+\}/, 'output.writeDouble(5, lon_);')
        content = content.replaceAll(/if \(hae_ != 0D\) \{\n\s+output\.writeDouble\(6, hae_\);\n\s+\}/, 'output.writeDouble(6, hae_);')
        content = content.replaceAll(/if \(ce_ != 0D\) \{\n\s+output\.writeDouble\(7, ce_\);\n\s+\}/, 'output.writeDouble(7, ce_);')
        content = content.replaceAll(/if \(le_ != 0D\) \{\n\s+output\.writeDouble\(8, le_\);\n\s+\}/, 'output.writeDouble(8, le_);')
        
        // Remove size computation conditionals
        content = content.replaceAll(/if \(lat_ != 0D\) \{\n\s+size \+= com\.google\.protobuf\.CodedOutputStream\n\s+\.computeDoubleSize\(4, lat_\);\n\s+\}/, 'size += com.google.protobuf.CodedOutputStream.computeDoubleSize(4, lat_);')
        content = content.replaceAll(/if \(lon_ != 0D\) \{\n\s+size \+= com\.google\.protobuf\.CodedOutputStream\n\s+\.computeDoubleSize\(5, lon_\);\n\s+\}/, 'size += com.google.protobuf.CodedOutputStream.computeDoubleSize(5, lon_);')
        content = content.replaceAll(/if \(hae_ != 0D\) \{\n\s+size \+= com\.google\.protobuf\.CodedOutputStream\n\s+\.computeDoubleSize\(6, hae_\);\n\s+\}/, 'size += com.google.protobuf.CodedOutputStream.computeDoubleSize(6, hae_);')
        content = content.replaceAll(/if \(ce_ != 0D\) \{\n\s+size \+= com\.google\.protobuf\.CodedOutputStream\n\s+\.computeDoubleSize\(7, ce_\);\n\s+\}/, 'size += com.google.protobuf.CodedOutputStream.computeDoubleSize(7, ce_);')
        content = content.replaceAll(/if \(le_ != 0D\) \{\n\s+size \+= com\.google\.protobuf\.CodedOutputStream\n\s+\.computeDoubleSize\(8, le_\);\n\s+\}/, 'size += com.google.protobuf.CodedOutputStream.computeDoubleSize(8, le_);')
        
        file.write(content)
        println 'APPLIED PROTO PATCH'
    }
}

compileJava.finalizedBy(tasks.applyGrpcPatch)

